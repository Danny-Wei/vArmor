---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: varmorpolicies.crd.varmor.org
spec:
  group: crd.varmor.org
  names:
    kind: VarmorPolicy
    listKind: VarmorPolicyList
    plural: varmorpolicies
    shortNames:
    - vpol
    singular: varmorpolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.policy.enforcer
      name: ENFORCER
      type: string
    - jsonPath: .spec.policy.mode
      name: MODE
      type: string
    - jsonPath: .spec.target.kind
      name: TARGET-KIND
      type: string
    - jsonPath: .spec.target.name
      name: TARGET-NAME
      type: string
    - jsonPath: .spec.target.selector
      name: TARGET-SELECTOR
      type: string
    - jsonPath: .status.profileName
      name: PROFILE-NAME
      type: string
    - jsonPath: .status.ready
      name: READY
      type: boolean
    - jsonPath: .status.phase
      name: STATUS
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: VarmorPolicy is the Schema for the varmorpolicies API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: VarmorPolicySpec defines the desired state of VarmorPolicy
              or VarmorClusterPolicy
            properties:
              policy:
                description: Policy specifies which enforcer, mode and rules you want
                  to use to apply to the target.
                properties:
                  enforcer:
                    description: 'Enforcer is used to specify which LSM to use for
                      mandatory access control. Available values: AppArmor, BPF, Seccomp,
                      AppArmorBPF, AppArmorSeccomp, BPFSeccomp, AppArmorBPFSeccomp'
                    type: string
                  enhanceProtect:
                    description: EnhanceProtect is used to specify which built-in
                      or custom rules are employed to protect the target workloads.
                    properties:
                      allowViolations:
                        description: "AllowViolations determines whether to allow
                          the actions that are against the mandatory access control
                          rules. Any detected violation will be allowed instead of
                          being blocked. \n Default is false."
                        type: boolean
                      appArmorRawRules:
                        description: AppArmorRawRules is used to set custom AppArmor
                          rules.
                        items:
                          properties:
                            rules:
                              description: Rules define the custom AppArmor rules.
                                You should make sure that they satisfy the AppArmor
                                syntax on your own.
                              type: string
                            targets:
                              description: Targets specify the executable files for
                                which the rules apply. They must be specified as full
                                paths to the executable files.
                              items:
                                type: string
                              type: array
                          required:
                          - rules
                          type: object
                        type: array
                      attackProtectionRules:
                        description: AttackProtectionRules are used to specify the
                          built-in attack protection rules.
                        items:
                          properties:
                            rules:
                              description: Rules is the list of built-in attack protection
                                rules to be used.
                              items:
                                type: string
                              type: array
                            targets:
                              description: Targets specify the executable files for
                                which the rules and rawRules apply. They must be specified
                                as full paths to the executable files. This feature
                                is only effective when using AppArmor as the enforcer.
                              items:
                                type: string
                              type: array
                          required:
                          - rules
                          type: object
                        type: array
                      auditViolations:
                        description: "AuditViolations determines whether to audit
                          the actions that violate the mandatory access control rules.
                          Any detected violation will be logged to `/var/log/varmor/violations.log`
                          file in the host. Please note that the Seccomp enforcer
                          does not support auditing violations when the allowViolations
                          field is set to `false`. \n Default is false."
                        type: boolean
                      bpfRawRules:
                        description: BpfRawRules is used to set custom BPF rules.
                        properties:
                          files:
                            items:
                              properties:
                                pattern:
                                  description: Pattern can be any string (maximum
                                    length 128 bytes) that conforms to the policy
                                    syntax, used for matching file paths and filenames
                                  type: string
                                permissions:
                                  description: "Permissions are used to specify the
                                    file permissions to be disabled. \n Available
                                    values: all(*), read(r), write(w), exec(x), append(a)"
                                  items:
                                    type: string
                                  type: array
                              required:
                              - pattern
                              - permissions
                              type: object
                            type: array
                          mounts:
                            items:
                              properties:
                                flags:
                                  description: "Flags are used to specify the mount
                                    flags to enforce. They are almost the same as
                                    the 'MOUNT FLAGS LIST' of AppArmor. \n Available
                                    values: All Flags: all(*) Command Flags: ro(r,
                                    read-only), rw(w), suid, nosuid, dev, nodev, exec,
                                    noexec, sync, async, mand, nomand, dirsync, atime,
                                    noatime, diratime, nodiratime, silent, loud, relatime,
                                    norelatime, iversion, noiversion, strictatime,
                                    nostrictatime Generic Flags: remount, bind(B),
                                    move(M), rbind(R), make-unbindable, make-private(private),
                                    make-slave(slave), make-shared(shared), make-runbindable,
                                    make-rprivate, make-rslave, make-rshared Other
                                    Flags: umount"
                                  items:
                                    type: string
                                  type: array
                                fstype:
                                  description: Fstype is used to specify the type
                                    of filesystem to enforce. It can be '*' to match
                                    any type.
                                  type: string
                                sourcePattern:
                                  description: SourcePattern can be any string (maximum
                                    length 128 bytes) that conforms to the policy
                                    syntax, used for matching file paths and filenames
                                  type: string
                              required:
                              - flags
                              - fstype
                              - sourcePattern
                              type: object
                            type: array
                          network:
                            description: NetworkRule describes a network rule to match
                              traffic
                            properties:
                              egresses:
                                description: Egresses are the list of network egress
                                  rules to match traffic for connect(2) operations.
                                items:
                                  description: NetworkEgressRule describes a network
                                    egress rule to match traffic for connect(2) operations.
                                  properties:
                                    ip:
                                      description: IP defines this rule on a particular
                                        IP. Note that the ip field and ipBlock field
                                        are mutually exclusive.
                                      type: string
                                    ipBlock:
                                      description: IPBlock defines this rule on a
                                        particular IPBlock with CIDR. Note that the
                                        ip field and ipBlock field are mutually exclusive.
                                      type: string
                                    ports:
                                      description: Ports define this rule on particular
                                        ports. Each item in this list is combined
                                        using a logical OR. If this field is empty
                                        or missing, this rule matches all ports. If
                                        this field is present and contains at least
                                        one item, then this rule matches all ports
                                        in the list.
                                      items:
                                        description: Port describes a port or port
                                          range to match traffic
                                        properties:
                                          endPort:
                                            description: If set, indicates that the
                                              range of ports from port to endPort.
                                              The endPort must be equal or greater
                                              than port and must be in the range [1,
                                              65535].
                                            type: integer
                                          port:
                                            description: Port is the port number to
                                              match traffic. The port number must
                                              be in the range [1, 65535].
                                            type: integer
                                        required:
                                        - port
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              sockets:
                                description: Sockets are the list of network socket
                                  rules to match traffic for socket(2) operations.
                                items:
                                  description: NetworkSocketRule describes a network
                                    socket rule to match traffic for socket(2) operations.
                                  properties:
                                    domains:
                                      description: "Domains specifies the communication
                                        domains of socket. \n Available values: all(*),
                                        unix, inet, ax25, ipx, appletalk, netrom,
                                        bridge, atmpvc, x25, inet6, rose, netbeui,
                                        security, key, netlink, packet, ash, econet,
                                        atmsvc, rds, sna, irda, pppox, wanpipe, llc,
                                        ib, mpls, can, tipc, bluetooth, iucv, rxrpc,
                                        isdn, phonet, ieee802154, caif, alg, nfc,
                                        vsock, kcm, qipcrtr, smc, xdp, mctp"
                                      items:
                                        type: string
                                      type: array
                                    protocols:
                                      description: "Protocols specifies the particular
                                        protocols to be used with the socket. Note
                                        that the protocols field and types field are
                                        mutually exclusive. \n Available values: all(*),
                                        icmp, tcp, udp"
                                      items:
                                        type: string
                                      type: array
                                    types:
                                      description: "Types specifies the communication
                                        semantics of socket. \n Available values:
                                        all(*), stream, dgram, raw, rdm, seqpacket,
                                        dccp, packet"
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                            type: object
                          processes:
                            items:
                              properties:
                                pattern:
                                  description: Pattern can be any string (maximum
                                    length 128 bytes) that conforms to the policy
                                    syntax, used for matching file paths and filenames
                                  type: string
                                permissions:
                                  description: "Permissions are used to specify the
                                    file permissions to be disabled. \n Available
                                    values: all(*), read(r), write(w), exec(x), append(a)"
                                  items:
                                    type: string
                                  type: array
                              required:
                              - pattern
                              - permissions
                              type: object
                            type: array
                          ptrace:
                            properties:
                              permissions:
                                description: "Permissions are used to indicate which
                                  ptrace-related permissions of the target container
                                  should be restricted. \n Available values: all(*),
                                  trace, traceby, read, readby. - trace: prohibiting
                                  tracing of other processes. - read: prohibiting
                                  reading of other processes. - traceby: prohibiting
                                  being traced by other processes (excluding the host
                                  processes). - readby: prohibiting being read by
                                  other processes (excluding the host processes).
                                  \n The trace, traceby permissions for \"write\"
                                  operations, or other operations that are more dangerous,
                                  such as: ptrace attaching (PTRACE_ATTACH) to another
                                  process or calling process_vm_writev(2). \n The
                                  read, readby permissions for \"read\" operations
                                  or other operations that are less dangerous, such
                                  as: get_robust_list(2); kcmp(2); reading /proc/pid/auxv,
                                  /proc/pid/environ, or /proc/pid/stat; or readlink(2)
                                  of a /proc/pid/ns/* file."
                                items:
                                  type: string
                                type: array
                              strictMode:
                                description: StrictMode is used to indicate whether
                                  to restrict ptrace operations for all source and
                                  destination processes. Default is false. If set
                                  to false, it allows a process to perform trace and
                                  read operations on other processes within the same
                                  container, and also allows a process to be subjected
                                  to traceby and readby operations by other processes
                                  within the same container. If set to true, it prohibits
                                  all trace, read, traceby, and readby operations
                                  within the container.
                                type: boolean
                            required:
                            - permissions
                            type: object
                        type: object
                      hardeningRules:
                        description: HardeningRules are used to specify the built-in
                          hardening rules.
                        items:
                          type: string
                        type: array
                      privileged:
                        description: "Privileged is used to identify whether the policy
                          is for the privileged container. If set to `nil` or `false`,
                          the EnhanceProtect mode will build AppArmor or BPF profile
                          on top of the RuntimeDefault mode. Otherwise, it will build
                          AppArmor or BPF profile on top of the AlwaysAllow mode.
                          Default is false. \n Note: If set to `true`, vArmor will
                          not build Seccomp profile for the target workloads."
                        type: boolean
                      syscallRawRules:
                        description: SyscallRawRules is used to set the syscalls blocklist
                          rules with Seccomp enforcer.
                        items:
                          description: LinuxSyscall is used to match a syscall in
                            Seccomp
                          properties:
                            action:
                              description: LinuxSeccompAction taken upon Seccomp rule
                                match
                              type: string
                            args:
                              items:
                                description: LinuxSeccompArg used for matching specific
                                  syscall arguments in Seccomp
                                properties:
                                  index:
                                    type: integer
                                  op:
                                    description: LinuxSeccompOperator used to match
                                      syscall arguments in Seccomp
                                    type: string
                                  value:
                                    format: int64
                                    type: integer
                                  valueTwo:
                                    format: int64
                                    type: integer
                                required:
                                - index
                                - op
                                - value
                                type: object
                              type: array
                            errnoRet:
                              type: integer
                            names:
                              items:
                                type: string
                              type: array
                          required:
                          - action
                          - names
                          type: object
                        type: array
                      vulMitigationRules:
                        description: VulMitigationRules are used to specify the built-in
                          vulnerability mitigation rules.
                        items:
                          type: string
                        type: array
                    type: object
                  mode:
                    description: "Available values: AlwaysAllow, RuntimeDefault, EnhanceProtect,
                      BehaviorModeling, DefenseInDepth \n Note: BehaviorModeling and
                      DefenseInDepth modes are experimental features and currently
                      only work with AppArmor/Seccomp/AppArmorSeccomp enforcers."
                    type: string
                  modelingOptions:
                    description: ModelingOptions is used for the modeling settings.
                    properties:
                      duration:
                        description: Duration is the duration in minutes to modeling
                        type: integer
                    required:
                    - duration
                    type: object
                required:
                - enforcer
                - mode
                type: object
              target:
                description: Target specifies the workloads and their containers you
                  want to harden.
                properties:
                  containers:
                    description: Containers are used to specify the names of the protected
                      containers. If it is empty, sandbox protection will be enabled
                      for all containers within the workload (excluding initContainers
                      and ephemeralContainers).
                    items:
                      type: string
                    type: array
                  kind:
                    description: 'Kind is used to specify the type of workloads for
                      the protection targets. Available values: Deployment, StatefulSet,
                      DaemonSet, Pod.'
                    type: string
                  name:
                    description: Name is used to specify a specific workload name.
                    type: string
                  selector:
                    description: LabelSelector is used to match workloads that meet
                      the specified conditions. Note that the selector field and name
                      field are mutually exclusive.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                required:
                - kind
                type: object
              updateExistingWorkloads:
                description: "UpdateExistingWorkloads is used to indicate whether
                  to perform a rolling update on target existing workloads, thus enabling
                  or disabling the protection of the target workloads when policies
                  are created or deleted. Default is false. \n Note: vArmor only performs
                  a rolling update on Deployment, StatefulSet, or DaemonSet type workloads.
                  If `.spec.target.kind` is Pod, you need to rebuild the Pod yourself
                  to enable or disable protection."
                type: boolean
            required:
            - policy
            - target
            type: object
          status:
            description: VarmorPolicyStatus defines the observed state of VarmorPolicy
              or VarmorClusterPolicy
            properties:
              conditions:
                description: Conditions
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: 'Type of ArmorProfile condition. Possible values:
                        Created, Updated, Ready'
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              phase:
                description: "Phase is used to indicate the processing phase of the
                  policy. Possible values: Pending, Modeling, Completed, Protecting,
                  Error. \n Note: You can find out which varmor-agent has an error
                  by reading the ArmorProfile/status corresponding to the current
                  VarmorPolicy"
                type: string
              profileName:
                type: string
              ready:
                description: Ready is used to indicate whether the profile of policy
                  is loaded.
                type: boolean
            required:
            - profileName
            - ready
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
